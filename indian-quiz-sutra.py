import streamlit as st
from langchain_openai import ChatOpenAI
from educhain import Educhain, LLMConfig

# Initialize Sutra model
def init_llm(api_key):
    sutra = ChatOpenAI(
        model="sutra-v2",
        openai_api_key=api_key,
        openai_api_base="https://api.two.ai/v2",
    )
    sutra_config = LLMConfig(custom_model=sutra)
    return Educhain(sutra_config)

# Language prompt templates
LANGUAGE_TEMPLATES = {
    "Telugu": """
р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л {num} р░мр░╣р▒Бр░│р▒Ир░Ър▒Нр░Ыр░┐р░Х р░кр▒Нр░░р░╢р▒Нр░ир░▓р░ир▒Б р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░Вр░бр░┐.
р░Ер░Вр░╢р░В: {topic}

р░кр▒Нр░░р░др░┐ р░кр▒Нр░░р░╢р▒Нр░ир░Хр▒Б:
1. р░кр▒Нр░░р░╢р▒Нр░и
2. р░ир░╛р░▓р▒Бр░Чр▒Б р░╕р░ор░╛р░зр░╛р░и р░Ор░Вр░кр░┐р░Хр░▓р▒Б (р░О, р░мр░┐, р░╕р░┐, р░бр░┐)
3. р░╕р░░р▒Ир░и р░╕р░ор░╛р░зр░╛р░ир░В
4. р░╡р░┐р░╡р░░р░г
    """,
    
    "Hindi": """
рд╣рд┐рдВрджреА рдореЗрдВ {num} рдмрд╣реБрд╡рд┐рдХрд▓реНрдкреАрдп рдкреНрд░рд╢реНрди рдмрдирд╛рдПрдВред
рд╡рд┐рд╖рдп: {topic}

рдкреНрд░рддреНрдпреЗрдХ рдкреНрд░рд╢реНрди рдХреЗ рд▓рд┐рдП:
1. рдкреНрд░рд╢реНрди
2. рдЪрд╛рд░ рд╡рд┐рдХрд▓реНрдк (рдХ, рдЦ, рдЧ, рдШ)
3. рд╕рд╣реА рдЙрддреНрддрд░
4. рд╡реНрдпрд╛рдЦреНрдпрд╛
    """,
    
    "Tamil": """
родрооро┐ро┤ро┐ро▓рпН {num} рокро▓рпНродрпЗро░рпНро╡рпБ ро╡ро┐ройро╛роХрпНроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХро╡рпБроорпН.
родро▓рпИрокрпНрокрпБ: {topic}

роТро╡рпНро╡рпКро░рпБ роХрпЗро│рпНро╡ро┐роХрпНроХрпБроорпН:
1. роХрпЗро│рпНро╡ро┐
2. роиро╛ройрпНроХрпБ ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│рпН (роЕ, роЖ, роЗ, роИ)
3. роЪро░ро┐ропро╛рой рокродро┐ро▓рпН
4. ро╡ро┐ро│роХрпНроХроорпН
    """,
    
    "Kannada": """
р▓Хр▓ир│Нр▓ир▓бр▓жр▓▓р│Нр▓▓р▓┐ {num} р▓мр▓╣р│Б р▓Жр▓пр│Нр▓Хр│Ж р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр▓│р▓ир│Нр▓ир│Б р▓░р▓Ър▓┐р▓╕р▓┐.
р▓╡р▓┐р▓╖р▓п: {topic}

р▓кр│Нр▓░р▓др▓┐ р▓кр│Нр▓░р▓╢р│Нр▓ир│Жр▓Чр│Ж:
1. р▓кр│Нр▓░р▓╢р│Нр▓ир│Ж
2. р▓ир▓╛р▓▓р│Нр▓Хр│Б р▓Жр▓пр│Нр▓Хр│Жр▓Чр▓│р│Б (р▓О, р▓мр▓┐, р▓╕р▓┐, р▓бр▓┐)
3. р▓╕р▓░р▓┐р▓пр▓╛р▓ж р▓Йр▓др│Нр▓др▓░
4. р▓╡р▓┐р▓╡р▓░р▓гр│Ж
    """,
    
    "Malayalam": """
р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ {num} р┤мр┤╣р╡Бр┤╡р┤░р┤г р┤Ър╡Лр┤жр╡Нр┤пр┤Щр╡Нр┤Щр╡╛ р┤╕р╡Гр┤╖р╡Нр┤Яр┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.
р┤╡р┤┐р┤╖р┤пр┤В: {topic}

р┤Ур┤░р╡Л р┤Ър╡Лр┤жр╡Нр┤пр┤др╡Нр┤др┤┐р┤ир╡Бр┤В:
1. р┤Ър╡Лр┤жр╡Нр┤пр┤В
2. р┤ир┤╛р┤▓р╡Н р┤Ур┤кр╡Нр┤╖р┤ир╡Бр┤Хр╡╛ (р┤О, р┤мр┤┐, р┤╕р┤┐, р┤бр┤┐)
3. р┤╢р┤░р┤┐р┤пр┤╛р┤п р┤Йр┤др╡Нр┤др┤░р┤В
4. р┤╡р┤┐р┤╢р┤жр╡Ар┤Хр┤░р┤гр┤В
    """,
    
    "Bengali": """
ржмрж╛ржВрж▓рж╛ржпрж╝ {num} ржЯрж┐ ржмрж╣рзБржирж┐рж░рзНржмрж╛ржЪржирзА ржкрзНрж░рж╢рзНржи рждрзИрж░рж┐ ржХрж░рзБржиред
ржмрж┐рж╖ржпрж╝: {topic}

ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╢рзНржирзЗрж░ ржЬржирзНржп:
1. ржкрзНрж░рж╢рзНржи
2. ржЪрж╛рж░ржЯрж┐ ржмрж┐ржХрж▓рзНржк (ржХ, ржЦ, ржЧ, ржШ)
3. рж╕ржарж┐ржХ ржЙрждрзНрждрж░
4. ржмрзНржпрж╛ржЦрзНржпрж╛
    """,
    
    "Gujarati": """
ркЧрлБркЬрк░рк╛ркдрлАркорк╛ркВ {num} ркмрк╣рлБрк╡рк┐ркХрк▓рлНрккрлА рккрлНрк░рк╢рлНркирлЛ ркмркирк╛рк╡рлЛ.
рк╡рк┐рк╖ркп: {topic}

ркжрк░рлЗркХ рккрлНрк░рк╢рлНрки ркорк╛ркЯрлЗ:
1. рккрлНрк░рк╢рлНрки
2. ркЪрк╛рк░ рк╡рк┐ркХрк▓рлНрккрлЛ (ркЕ, ркм, ркХ, ркб)
3. рк╕рк╛ркЪрлЛ ркЬрк╡рк╛ркм
4. рк╕ркоркЬрлВркдрлА
    """
}

# Streamlit UI
st.title("ЁЯЧгя╕П Multilingual Quiz using Sutra")
st.write("Generate quiz questions in various Indian languages powered by Educhain")

# Sidebar for inputs
with st.sidebar:
    st.header("Quiz Settings")
    
    # API Key input
    api_key = st.text_input("Enter Sutra API Key", type="password")
    st.markdown("[Generate API key](https://docs.two.ai)")
    
    st.markdown("---")
    
    language = st.selectbox(
        "Select Language",
        options=list(LANGUAGE_TEMPLATES.keys()),
        index=0
    )
    
    topic = st.text_input("Enter Topic")
    num_questions = st.slider("Number of Questions", 5, 20, 10)
    
    st.markdown("---")
    st.markdown("### Topics Suggestions:")
    if language == "Telugu":
        st.markdown("""
        - р░нр░╛р░░р░д р░Ър░░р░┐р░др▒Нр░░ (Indian History)
        - р░нр▒Вр░Чр▒Лр░│р░╢р░╛р░╕р▒Нр░др▒Нр░░р░В (Geography)
        - р░╡р░┐р░Ьр▒Нр░Юр░╛р░и р░╢р░╛р░╕р▒Нр░др▒Нр░░р░В & р░╕р░╛р░Вр░Хр▒Зр░др░┐р░Х (Science & Technology)
        - р░нр░╛р░░р░др▒Ар░п р░╕р░Вр░╕р▒Нр░Хр▒Гр░др░┐ (Indian Culture)
        - р░Хр▒Нр░░р▒Ар░бр░▓р▒Б (Sports)
        - р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╡р▒Нр░пр░╡р░╣р░╛р░░р░╛р░▓р▒Б (Current Affairs)
        """)
    elif language == "Hindi":
        st.markdown("""
        - рднрд╛рд░рддреАрдп рдЗрддрд┐рд╣рд╛рд╕ (Indian History)
        - рднреВрдЧреЛрд▓ (Geography)
        - рд╡рд┐рдЬреНрдЮрд╛рди рдФрд░ рдкреНрд░реМрджреНрдпреЛрдЧрд┐рдХреА (Science & Technology)
        - рднрд╛рд░рддреАрдп рд╕рдВрд╕реНрдХреГрддрд┐ (Indian Culture)
        - рдЦреЗрд▓ (Sports)
        - рд╕рдорд╕рд╛рдордпрд┐рдХ рдШрдЯрдирд╛рдПрдБ (Current Affairs)
        """)
    elif language == "Tamil":
        st.markdown("""
        - роЗроирпНродро┐роп ро╡ро░ро▓ро╛ро▒рпБ (Indian History)
        - рокрпБро╡ро┐ропро┐ропро▓рпН (Geography)
        - роЕро▒ро┐ро╡ро┐ропро▓рпН & родрпКро┤ро┐ро▓рпНроирпБроЯрпНрокроорпН (Science & Technology)
        - роЗроирпНродро┐роп роХро▓ро╛роЪрпНроЪро╛ро░роорпН (Indian Culture)
        - ро╡ро┐ро│рпИропро╛роЯрпНроЯрпБ (Sports)
        - роироЯрокрпНрокрпБ ро╡ро┐ро╡роХро╛ро░роЩрпНроХро│рпН (Current Affairs)
        """)
    elif language == "Kannada":
        st.markdown("""
        - р▓нр▓╛р▓░р▓др▓ж р▓Зр▓др▓┐р▓╣р▓╛р▓╕ (Indian History)
        - р▓нр│Вр▓Чр│Лр▓│р▓╢р▓╛р▓╕р│Нр▓др│Нр▓░ (Geography)
        - р▓╡р▓┐р▓Ьр│Нр▓Юр▓╛р▓и & р▓др▓Вр▓др│Нр▓░р▓Ьр│Нр▓Юр▓╛р▓и (Science & Technology)
        - р▓нр▓╛р▓░р▓др│Ар▓п р▓╕р▓Вр▓╕р│Нр▓Хр│Гр▓др▓┐ (Indian Culture)
        - р▓Хр│Нр▓░р│Ар▓бр│Жр▓Чр▓│р│Б (Sports)
        - р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓╡р▓┐р▓жр│Нр▓пр▓ор▓╛р▓ир▓Чр▓│р│Б (Current Affairs)
        """)
    elif language == "Malayalam":
        st.markdown("""
        - р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤Ър┤░р┤┐р┤др╡Нр┤░р┤В (Indian History)
        - р┤нр╡Вр┤ор┤┐р┤╢р┤╛р┤╕р╡Нр┤др╡Нр┤░р┤В (Geography)
        - р┤╢р┤╛р┤╕р╡Нр┤др╡Нр┤░р┤╡р╡Бр┤В р┤╕р┤╛р┤Щр╡Нр┤Хр╡Зр┤др┤┐р┤Хр┤╡р┤┐р┤жр╡Нр┤пр┤пр╡Бр┤В (Science & Technology)
        - р┤Зр┤ир╡Нр┤др╡Нр┤пр╡╗ р┤╕р┤Вр┤╕р╡Нр┤Хр┤╛р┤░р┤В (Indian Culture)
        - р┤Хр┤╛р┤пр┤┐р┤Хр┤В (Sports)
        - р┤ир┤┐р┤▓р┤╡р┤┐р┤▓р╡Ж р┤Хр┤╛р┤░р╡Нр┤пр┤Щр╡Нр┤Щр╡╛ (Current Affairs)
        """)
    elif language == "Bengali":
        st.markdown("""
        - ржнрж╛рж░рждрзАржпрж╝ ржЗрждрж┐рж╣рж╛рж╕ (Indian History)
        - ржнрзВржЧрзЛрж▓ (Geography)
        - ржмрж┐ржЬрзНржЮрж╛ржи ржУ ржкрзНрж░ржпрзБржХрзНрждрж┐ (Science & Technology)
        - ржнрж╛рж░рждрзАржпрж╝ рж╕ржВрж╕рзНржХрзГрждрж┐ (Indian Culture)
        - ржЦрзЗрж▓рж╛ржзрзБрж▓рж╛ (Sports)
        - рж╕рж╛ржорзНржкрзНрж░рждрж┐ржХ ржШржЯржирж╛ржмрж▓рзА (Current Affairs)
        """)
    elif language == "Gujarati":
        st.markdown("""
        - ркнрк╛рк░ркдрлАркп ркЗркдрк┐рк╣рк╛рк╕ (Indian History)
        - ркнрлВркЧрлЛрк│ (Geography)
        - рк╡рк┐ркЬрлНркЮрк╛рки ркЕркирлЗ ркЯрлЗркХркирлЛрк▓рлЛркЬрлА (Science & Technology)
        - ркнрк╛рк░ркдрлАркп рк╕ркВрк╕рлНркХрлГркдрк┐ (Indian Culture)
        - рк░ркоркдркЧркоркд (Sports)
        - рк╕рк╛ркВрккрлНрк░ркд рккрлНрк░рк╡рк╛рк╣рлЛ (Current Affairs)
        """)

# Main content
if st.button("Generate Quiz"):
    if not api_key:
        st.error("Please enter your Sutra API key in the sidebar.")
    else:
        with st.spinner(f"Generating {num_questions} questions in {language}..."):
            try:
                client = init_llm(api_key)
                
                # Generate questions using the selected language template
                questions = client.qna_engine.generate_questions(
                    topic=topic,
                    num=num_questions,
                    prompt_template=LANGUAGE_TEMPLATES[language]
                )
                
                # Display questions
                st.success("тЬЕ Quiz generated successfully!")
                st.markdown("---")
                
                # Create tabs for Questions and Answer Key
                q_tab, a_tab = st.tabs(["Questions", "Answer Key"])
                
                with q_tab:
                    for i, q in enumerate(questions.questions, 1):
                        st.markdown(f"### Question {i}")
                        st.write(q.question)
                        
                        # Display options in columns
                        cols = st.columns(2)
                        for j, option in enumerate(q.options):
                            with cols[j//2]:
                                st.write(option)
                        
                        st.markdown("---")
                
                with a_tab:
                    for i, q in enumerate(questions.questions, 1):
                        st.markdown(f"### Question {i} - Answer")
                        st.write(f"**Correct Answer:** {q.answer}")
                        st.write(f"**Explanation:** {q.explanation}")
                        st.markdown("---")

            except Exception as e:
                st.error(f"An error occurred: {str(e)}")
                st.info("Please check your API key or try again later.")

# Footer
st.markdown("---")
st.markdown("Made with тЭдя╕П using Educhain and Sutra model")
